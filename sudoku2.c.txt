// Definition for arrays:
// typedef struct arr_##name {
//   int size;
//   type *arr;
// } arr_##name;
//
// arr_##name alloc_arr_##name(int len) {
//   arr_##name a = {len, len > 0 ? malloc(sizeof(type) * len) : NULL};
//   return a;
// }
//
//
bool sudoku2(arr_arr_char grid) {
    bool valid = true;
    int row, col;
    
    for (int i=0; i<grid.size; i++){
        for (int j=0; j<grid.size; j++){
            if (grid.arr[i].arr[j] != '.'){
                //Check if there is a same element in that column
                col = (j<(grid.size-1))?j+1:0;
                while(col!=j){
                    if(grid.arr[i].arr[j] == grid.arr[i].arr[col]){
                        //printf("%c",grid.arr[i].arr[j]);
                        valid = false;
                        return valid;
                    }
                    else col = (col<(grid.size-1))?col+1:0;
                }
                //Check if there is a same element in that row 
                row = (i<(grid.size-1))?i+1:0;
                while(row!=i){
                    if(grid.arr[i].arr[j] == grid.arr[row].arr[j]){
                        //printf("row");
                        valid = false;
                        return valid;
                    }
                    else row = (row<(grid.size-1))?row+1:0;
                }
                //Check if there is a same element in that 3x3 subgrid
                if (j<3){
                    if(i<3){
                        row = 0;
                        col = 0;
                    }
                    if((i<6)&&(i>2)){
                        row = 3;
                        col = 0;
                    }
                    if(i>5){
                        row = 6;
                        col = 0;
                    }
                }
                if ((j<6)&&(j>2)){
                    if(i<3){
                        row = 0;
                        col = 3;
                    }
                    if((i<6)&&(i>2)){
                        row = 3;
                        col = 3;
                    }
                    if(i>5){
                        row = 6;
                        col = 3;
                    }
                }
                if (j>5){
                    if(i<3){
                        row = 0;
                        col = 6;
                    }
                    if((i<6)&&(i>2)){
                        row = 3;
                        col = 6;
                    }
                    if(i>5){
                        row = 6;
                        col = 6;
                    }
                }
                for(int k=row; k<row+3; k++){
                    for(int l=col; l<col+3; l++){
                        if (grid.arr[k].arr[l] != '.'){
                            if ((k!=i)&&(l!=j)){
                                if (grid.arr[i].arr[j] == grid.arr[k].arr[l]) {
                                printf("%c",grid.arr[k].arr[l]);
                                valid = false;
                                return valid;
                            }   
                            }
                        }
                    }
                }
            }
        }
    }
        return valid;
}
